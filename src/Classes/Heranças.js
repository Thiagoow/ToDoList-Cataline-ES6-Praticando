/*
O conceito de heran√ßas serve pra passar
atributos e m√©todos de uma classe, para outra.

Passando a heran√ßa da classe pai, pra classe filho, com o comando:
    class "filho" extends "pai" {

    }

Herdando o construtor da classe pai pra classe filho:
    super();
Sendo a mesma coisa que fazer:
    new classePai();

Herdando um m√©todo espec√≠fico da classe pai pra filho, com o comando:
    super.m√©todoX();
Sendo a mesma coisa que fazer:
    classePai.m√©todoX();
*/

class Ve√≠culo {
  constructor(rodas) {
    this.rodas = rodas;
  }
  acelerar() {
    console.log(`Acelerou com ${this.rodas} rodas`);
  }
}
const celta = new Ve√≠culo(4);
console.log("Ve√≠culo:");
celta.acelerar();

class Moto extends Ve√≠culo {
  empinar() {
    console.log(`Empinou com ${this.rodas} rodas`);
  }
  acelerar() {
    //Herdando o mesmo m√©todo existente na classe pai:
    super.acelerar();
    //Sendo a mesma coisa que fazer: ClassePai.acelerar();
    //M√©todo existente apenas na classe moto:
    console.log("Acelerou como uma moto üòé");
  }
}

//Cria uma nova moto com n√∫mero de rodas:
const lambreta = new Moto(2);
//Executa o m√©todo presente na classe moto:
console.log("Moto:");
lambreta.acelerar();
lambreta.empinar();
